# PR Checks: Run all pre-commit checks (black, isort, flake8, mypy, pytest, and hygiene hooks)
# Mirrors local pre-commit config for CI consistency

name: PR Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  pr-checks:
    name: Run Pre-commit Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Set Poetry to use in-project virtualenv
        run: poetry config virtualenvs.in-project true
      - name: Cache Poetry virtualenv and downloads
        uses: actions/cache@v3
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install

      - name: Run black
        run: poetry run black --check .

      - name: Run isort
        run: poetry run isort --check-only .

      - name: Run flake8
        run: poetry run flake8 .

      - name: Run mypy
        run: poetry run mypy .

      - name: Run hygiene hooks (trailing whitespace, end-of-file-fixer, requirements-txt-fixer)
        run: |
          poetry run pre-commit run trailing-whitespace --all-files
          poetry run pre-commit run end-of-file-fixer --all-files
          poetry run pre-commit run requirements-txt-fixer --all-files

  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Set Poetry to use in-project virtualenv
        run: poetry config virtualenvs.in-project true
      - name: Cache Poetry virtualenv and downloads
        uses: actions/cache@v3
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install

      - name: Run pytest
        run: poetry run pytest
